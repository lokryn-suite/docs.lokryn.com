"use strict";(self.webpackChunkdocs_lokryn_com=self.webpackChunkdocs_lokryn_com||[]).push([[837],{5166:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>a,frontMatter:()=>c,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"pipe-audit/contributing.md/contributing-architecture","title":"Architecture Overview","description":"This page explains how the major components of Pipe Audit fit together.","source":"@site/docs/pipe-audit/contributing.md/architecture.md","sourceDirName":"pipe-audit/contributing.md","slug":"/contributing/architecture","permalink":"/docs/contributing/architecture","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"id":"contributing-architecture","title":"Architecture Overview","sidebar_position":1,"slug":"/contributing/architecture"},"sidebar":"tutorialSidebar","previous":{"title":"Contributing","permalink":"/docs/contributing"},"next":{"title":"Adding a New Rule","permalink":"/docs/contributing/adding-rules"}}');var s=i(4848),t=i(8453);const c={id:"contributing-architecture",title:"Architecture Overview",sidebar_position:1,slug:"/contributing/architecture"},l="Architecture Overview",o={},d=[{value:"High-Level Flow",id:"high-level-flow",level:2},{value:"Mental Model",id:"mental-model",level:2}];function h(e){const n={br:"br",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"architecture-overview",children:"Architecture Overview"})}),"\n",(0,s.jsxs)(n.p,{children:["This page explains how the major components of Pipe Audit fit together.",(0,s.jsx)(n.br,{}),"\n","Understanding this flow helps contributors see where validators, connectors, profiles, and contracts interact."]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"high-level-flow",children:"High-Level Flow"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsxs)(n.strong,{children:["Profiles (",(0,s.jsx)(n.code,{children:"profiles.toml"}),")"]})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Define connection details for data sources and sinks."}),"\n",(0,s.jsxs)(n.li,{children:["Reference connectors by ",(0,s.jsx)(n.code,{children:"provider"})," type (s3, gcs, azure, local)."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsxs)(n.strong,{children:["Connectors (",(0,s.jsx)(n.code,{children:"pipa-core/src/connectors/"}),")"]})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Each connector implements the ",(0,s.jsx)(n.code,{children:"Connector"})," trait."]}),"\n",(0,s.jsxs)(n.li,{children:["Required method: ",(0,s.jsx)(n.code,{children:"fetch(&self, location: &str) -> Result<DataSet, Error>"}),"."]}),"\n",(0,s.jsx)(n.li,{children:"Responsible for retrieving raw data from the configured profile."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsxs)(n.strong,{children:["Contracts (",(0,s.jsx)(n.code,{children:"contracts/*.toml"}),")"]})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Define validation expectations."}),"\n",(0,s.jsx)(n.li,{children:"Reference profiles by name."}),"\n",(0,s.jsx)(n.li,{children:"Contain file-level, column-level, and compound rules."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsxs)(n.strong,{children:["Validators (",(0,s.jsx)(n.code,{children:"pipa-core/src/validators/"}),")"]})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Each validator implements the ",(0,s.jsx)(n.code,{children:"Validator"})," trait."]}),"\n",(0,s.jsxs)(n.li,{children:["Responsible for enforcing a single rule (e.g., ",(0,s.jsx)(n.code,{children:"not_null"}),", ",(0,s.jsx)(n.code,{children:"range"}),", ",(0,s.jsx)(n.code,{children:"pattern"}),")."]}),"\n",(0,s.jsx)(n.li,{children:"Invoked by the contract runner against the dataset."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsxs)(n.strong,{children:["Execution (",(0,s.jsx)(n.code,{children:"pipa run"})," / ",(0,s.jsx)(n.code,{children:"pipa-core::run"}),")"]})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Loads contracts."}),"\n",(0,s.jsx)(n.li,{children:"Resolves profiles \u2192 connectors \u2192 fetch data."}),"\n",(0,s.jsx)(n.li,{children:"Applies validators to the dataset."}),"\n",(0,s.jsx)(n.li,{children:"Produces results and audit logs."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsxs)(n.strong,{children:["Logs (",(0,s.jsx)(n.code,{children:"logs/"}),")"]})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Tamper-evident, append-only record of validation runs."}),"\n",(0,s.jsxs)(n.li,{children:["Verifiable with ",(0,s.jsx)(n.code,{children:"pipa logs verify"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Quarantine"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Invalid files are moved to a quarantine destination."}),"\n",(0,s.jsxs)(n.li,{children:["Configured in the contract with ",(0,s.jsx)(n.code,{children:"[quarantine]"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"mental-model",children:"Mental Model"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Profiles"})," = ",(0,s.jsx)(n.em,{children:"where data lives"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Connectors"})," = ",(0,s.jsx)(n.em,{children:"how to fetch it"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Contracts"})," = ",(0,s.jsx)(n.em,{children:"what \u201cvalid\u201d means"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Validators"})," = ",(0,s.jsx)(n.em,{children:"the rules that enforce validity"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Execution"})," = ",(0,s.jsx)(n.em,{children:"the engine that ties it together"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Logs"})," = ",(0,s.jsx)(n.em,{children:"the record of what happened"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Quarantine"})," = ",(0,s.jsx)(n.em,{children:"where bad data goes"})]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.p,{children:"\u2705 With this overview, contributors can quickly orient themselves in the codebase and know where to add new validators, connectors, or docs."})]})}function a(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>c,x:()=>l});var r=i(6540);const s={},t=r.createContext(s);function c(e){const n=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);