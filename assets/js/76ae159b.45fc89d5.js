"use strict";(self.webpackChunkdocs_lokryn_com=self.webpackChunkdocs_lokryn_com||[]).push([[741],{7652:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>c,default:()=>p,frontMatter:()=>o,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"pipe-audit/core/core-quickstart","title":"Quickstart","description":"The pipa-core crate exposes the same functionality as the CLI, but programmatically.","source":"@site/docs/pipe-audit/core/quickstart.md","sourceDirName":"pipe-audit/core","slug":"/core/quickstart","permalink":"/docs/core/quickstart","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"id":"core-quickstart","title":"Quickstart","sidebar_position":2,"slug":"/core/quickstart"},"sidebar":"tutorialSidebar","previous":{"title":"Introduction","permalink":"/docs/core/intro"},"next":{"title":"Profiles","permalink":"/docs/core/profiles"}}');var i=n(4848),a=n(8453);const o={id:"core-quickstart",title:"Quickstart",sidebar_position:2,slug:"/core/quickstart"},c="Core Quickstart",s={},l=[{value:"1. Add Dependency",id:"1-add-dependency",level:2},{value:"2. Load and Validate a Contract",id:"2-load-and-validate-a-contract",level:2},{value:"3. Work with Profiles",id:"3-work-with-profiles",level:2},{value:"4. Use Environment Variables",id:"4-use-environment-variables",level:2},{value:"5. Run a Validation Programmatically",id:"5-run-a-validation-programmatically",level:2}];function d(e){const t={br:"br",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"core-quickstart",children:"Core Quickstart"})}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"pipa-core"})," crate exposes the same functionality as the CLI, but programmatically.",(0,i.jsx)(t.br,{}),"\n","This guide shows how to set up a contract, configure a profile, and run validations in Rust."]}),"\n",(0,i.jsx)(t.h2,{id:"1-add-dependency",children:"1. Add Dependency"}),"\n",(0,i.jsx)(t.p,{children:"In Cargo.toml:"}),"\n",(0,i.jsx)(t.p,{children:'[dependencies]\npipa-core = "0.1"'}),"\n",(0,i.jsx)(t.h2,{id:"2-load-and-validate-a-contract",children:"2. Load and Validate a Contract"}),"\n",(0,i.jsx)(t.p,{children:"use pipa_core::contract::{list_contracts, validate_contract};"}),"\n",(0,i.jsx)(t.p,{children:'fn main() {\nlet contracts = list_contracts();\nfor c in contracts {\nlet result = validate_contract(&c);\nprintln!("Contract {}: {:?}", c.name, result.outcome);\n}\n}'}),"\n",(0,i.jsx)(t.h2,{id:"3-work-with-profiles",children:"3. Work with Profiles"}),"\n",(0,i.jsx)(t.p,{children:"use pipa_core::profile::{list_profiles, test_profile};"}),"\n",(0,i.jsx)(t.p,{children:'fn main() {\nlet profiles = list_profiles();\nfor p in profiles {\nlet result = test_profile(&p.name);\nprintln!("Profile {}: {:?}", p.name, result);\n}\n}'}),"\n",(0,i.jsx)(t.h2,{id:"4-use-environment-variables",children:"4. Use Environment Variables"}),"\n",(0,i.jsx)(t.p,{children:"use dotenv::dotenv;"}),"\n",(0,i.jsx)(t.p,{children:'fn main() {\ndotenv().ok();\nlet key = std::env::var("AWS_ACCESS_KEY_ID").unwrap();\nprintln!("Loaded key: {}", key);\n}'}),"\n",(0,i.jsx)(t.h2,{id:"5-run-a-validation-programmatically",children:"5. Run a Validation Programmatically"}),"\n",(0,i.jsx)(t.p,{children:"use pipa_core::contract::{get_contract, run_contract_validation};\nuse pipa_core::logging::schema::Executor;"}),"\n",(0,i.jsx)(t.p,{children:'fn main() {\nlet contract = get_contract("example_contract").unwrap();\nlet executor = Executor::default();\nlet outcome = run_contract_validation(&contract, &executor);\nprintln!("Validation outcome: {:?}", outcome);\n}'}),"\n",(0,i.jsxs)(t.p,{children:["\u2705 With ",(0,i.jsx)(t.code,{children:"pipa-core"}),", you can embed Pipe Audit directly into your Rust applications or services."]})]})}function p(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>c});var r=n(6540);const i={},a=r.createContext(i);function o(e){const t=r.useContext(a);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(a.Provider,{value:t},e.children)}}}]);