"use strict";(self.webpackChunkdocs_lokryn_com=self.webpackChunkdocs_lokryn_com||[]).push([[870],{8453:(n,e,s)=>{s.d(e,{R:()=>t,x:()=>o});var r=s(6540);const l={},i=r.createContext(l);function t(n){const e=r.useContext(i);return r.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(l):n.components||l:t(n.components),r.createElement(i.Provider,{value:e},n.children)}},9118:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>a,contentTitle:()=>o,default:()=>x,frontMatter:()=>t,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"pipe-audit/core/core-rules","title":"Contract Rules","description":"Contracts use validation entries to apply rules at the file, column, or compound level.","source":"@site/docs/pipe-audit/core/rules.md","sourceDirName":"pipe-audit/core","slug":"/core/rules","permalink":"/docs/core/rules","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"id":"core-rules","title":"Contract Rules","sidebar_position":5,"slug":"/core/rules"},"sidebar":"tutorialSidebar","previous":{"title":"Init","permalink":"/docs/core/modules/init"},"next":{"title":"Logs & Quarantine","permalink":"/docs/core/logs-quarantine"}}');var l=s(4848),i=s(8453);const t={id:"core-rules",title:"Contract Rules",sidebar_position:5,slug:"/core/rules"},o="Contract Rules",a={},c=[{value:"File-Level Rules",id:"file-level-rules",level:2},{value:"Column-Level Rules",id:"column-level-rules",level:2},{value:"Compound Rules",id:"compound-rules",level:2}];function u(n){const e={br:"br",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",p:"p",strong:"strong",...(0,i.R)(),...n.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(e.header,{children:(0,l.jsx)(e.h1,{id:"contract-rules",children:"Contract Rules"})}),"\n",(0,l.jsxs)(e.p,{children:["Contracts use ",(0,l.jsx)(e.code,{children:"validation"})," entries to apply rules at the ",(0,l.jsx)(e.strong,{children:"file"}),", ",(0,l.jsx)(e.strong,{children:"column"}),", or ",(0,l.jsx)(e.strong,{children:"compound"})," level.",(0,l.jsx)(e.br,{}),"\n","This page lists all available rules with TOML examples."]}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsx)(e.h2,{id:"file-level-rules",children:"File-Level Rules"}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"completeness"}),(0,l.jsx)(e.br,{}),"\n","Check overall completeness of the file (e.g., proportion of non-null cells).",(0,l.jsx)(e.br,{}),"\n","[file]",(0,l.jsx)(e.br,{}),"\n","validation = [",(0,l.jsx)(e.br,{}),"\n",'{ rule = "completeness", min = 0.95 }',(0,l.jsx)(e.br,{}),"\n","]"]}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"row_count"}),(0,l.jsx)(e.br,{}),"\n","Require the file to have a row count within a range.",(0,l.jsx)(e.br,{}),"\n","[file]",(0,l.jsx)(e.br,{}),"\n","validation = [",(0,l.jsx)(e.br,{}),"\n",'{ rule = "row_count", min = 1000, max = 5000 }',(0,l.jsx)(e.br,{}),"\n","]"]}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsx)(e.h2,{id:"column-level-rules",children:"Column-Level Rules"}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"boolean"}),(0,l.jsx)(e.br,{}),"\n","Ensure values are boolean-like (",(0,l.jsx)(e.code,{children:"true"}),"/",(0,l.jsx)(e.code,{children:"false"}),").",(0,l.jsx)(e.br,{}),"\n","[[columns]]",(0,l.jsx)(e.br,{}),"\n",'name = "is_active"',(0,l.jsx)(e.br,{}),"\n","validation = [",(0,l.jsx)(e.br,{}),"\n",'{ rule = "boolean" }',(0,l.jsx)(e.br,{}),"\n","]"]}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"completeness"}),(0,l.jsx)(e.br,{}),"\n","Check completeness ratio for a column.",(0,l.jsx)(e.br,{}),"\n","[[columns]]",(0,l.jsx)(e.br,{}),"\n",'name = "email"',(0,l.jsx)(e.br,{}),"\n","validation = [",(0,l.jsx)(e.br,{}),"\n",'{ rule = "completeness", min = 0.99 }',(0,l.jsx)(e.br,{}),"\n","]"]}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"date_format"}),(0,l.jsx)(e.br,{}),"\n","Require values to match a date format.",(0,l.jsx)(e.br,{}),"\n","[[columns]]",(0,l.jsx)(e.br,{}),"\n",'name = "signup_date"',(0,l.jsx)(e.br,{}),"\n","validation = [",(0,l.jsx)(e.br,{}),"\n",'{ rule = "date_format", format = "%Y-%m-%d" }',(0,l.jsx)(e.br,{}),"\n","]"]}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"distinctness"}),(0,l.jsx)(e.br,{}),"\n","Check distinctness ratio of a column.",(0,l.jsx)(e.br,{}),"\n","[[columns]]",(0,l.jsx)(e.br,{}),"\n",'name = "country"',(0,l.jsx)(e.br,{}),"\n","validation = [",(0,l.jsx)(e.br,{}),"\n",'{ rule = "distinctness", min = 0.1, max = 0.5 }',(0,l.jsx)(e.br,{}),"\n","]"]}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"in_set"}),(0,l.jsx)(e.br,{}),"\n","Restrict values to a whitelist.",(0,l.jsx)(e.br,{}),"\n","[[columns]]",(0,l.jsx)(e.br,{}),"\n",'name = "status"',(0,l.jsx)(e.br,{}),"\n","validation = [",(0,l.jsx)(e.br,{}),"\n",'{ rule = "in_set", values = ["active", "inactive", "pending"] }',(0,l.jsx)(e.br,{}),"\n","]"]}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"not_in_set"}),(0,l.jsx)(e.br,{}),"\n","Fail if values appear in a blacklist.",(0,l.jsx)(e.br,{}),"\n","[[columns]]",(0,l.jsx)(e.br,{}),"\n",'name = "status"',(0,l.jsx)(e.br,{}),"\n","validation = [",(0,l.jsx)(e.br,{}),"\n",'{ rule = "not_in_set", values = ["error", "unknown"] }',(0,l.jsx)(e.br,{}),"\n","]"]}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"max_length"}),(0,l.jsx)(e.br,{}),"\n","Enforce maximum string length.",(0,l.jsx)(e.br,{}),"\n","[[columns]]",(0,l.jsx)(e.br,{}),"\n",'name = "username"',(0,l.jsx)(e.br,{}),"\n","validation = [",(0,l.jsx)(e.br,{}),"\n",'{ rule = "max_length", length = 32 }',(0,l.jsx)(e.br,{}),"\n","]"]}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"mean_between"}),(0,l.jsx)(e.br,{}),"\n","Require column mean within a range.",(0,l.jsx)(e.br,{}),"\n","[[columns]]",(0,l.jsx)(e.br,{}),"\n",'name = "age"',(0,l.jsx)(e.br,{}),"\n","validation = [",(0,l.jsx)(e.br,{}),"\n",'{ rule = "mean_between", min = 18, max = 65 }',(0,l.jsx)(e.br,{}),"\n","]"]}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"stdev_between"}),(0,l.jsx)(e.br,{}),"\n","Require column standard deviation within a range.",(0,l.jsx)(e.br,{}),"\n","[[columns]]",(0,l.jsx)(e.br,{}),"\n",'name = "salary"',(0,l.jsx)(e.br,{}),"\n","validation = [",(0,l.jsx)(e.br,{}),"\n",'{ rule = "stdev_between", min = 1000, max = 5000 }',(0,l.jsx)(e.br,{}),"\n","]"]}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"not_null"}),(0,l.jsx)(e.br,{}),"\n","Disallow null or empty values.",(0,l.jsx)(e.br,{}),"\n","[[columns]]",(0,l.jsx)(e.br,{}),"\n",'name = "person_id"',(0,l.jsx)(e.br,{}),"\n","validation = [",(0,l.jsx)(e.br,{}),"\n",'{ rule = "not_null" }',(0,l.jsx)(e.br,{}),"\n","]"]}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"outlier_sigma"}),(0,l.jsx)(e.br,{}),"\n","Flag values outside N standard deviations.",(0,l.jsx)(e.br,{}),"\n","[[columns]]",(0,l.jsx)(e.br,{}),"\n",'name = "height"',(0,l.jsx)(e.br,{}),"\n","validation = [",(0,l.jsx)(e.br,{}),"\n",'{ rule = "outlier_sigma", sigma = 3.0 }',(0,l.jsx)(e.br,{}),"\n","]"]}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"pattern"}),(0,l.jsx)(e.br,{}),"\n","Require values to match a regex.",(0,l.jsx)(e.br,{}),"\n","[[columns]]",(0,l.jsx)(e.br,{}),"\n",'name = "uuid"',(0,l.jsx)(e.br,{}),"\n","validation = [",(0,l.jsx)(e.br,{}),"\n",'{ rule = "pattern", pattern = "^[0-9a-fA-F-]',36,'$" }',(0,l.jsx)(e.br,{}),"\n","]"]}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"range"}),(0,l.jsx)(e.br,{}),"\n","Require numeric values within [min, max].",(0,l.jsx)(e.br,{}),"\n","[[columns]]",(0,l.jsx)(e.br,{}),"\n",'name = "score"',(0,l.jsx)(e.br,{}),"\n","validation = [",(0,l.jsx)(e.br,{}),"\n",'{ rule = "range", min = 0, max = 100 }',(0,l.jsx)(e.br,{}),"\n","]"]}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"type_validator"}),(0,l.jsx)(e.br,{}),"\n","Enforce a declared type (e.g., integer, float, string).",(0,l.jsx)(e.br,{}),"\n","[[columns]]",(0,l.jsx)(e.br,{}),"\n",'name = "age"',(0,l.jsx)(e.br,{}),"\n","validation = [",(0,l.jsx)(e.br,{}),"\n",'{ rule = "type_validator", type = "integer" }',(0,l.jsx)(e.br,{}),"\n","]"]}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"unique"}),(0,l.jsx)(e.br,{}),"\n","Require values in the column to be unique.",(0,l.jsx)(e.br,{}),"\n","[[columns]]",(0,l.jsx)(e.br,{}),"\n",'name = "email"',(0,l.jsx)(e.br,{}),"\n","validation = [",(0,l.jsx)(e.br,{}),"\n",'{ rule = "unique" }',(0,l.jsx)(e.br,{}),"\n","]"]}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsx)(e.h2,{id:"compound-rules",children:"Compound Rules"}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"unique"}),(0,l.jsx)(e.br,{}),"\n","Enforce uniqueness across multiple columns.",(0,l.jsx)(e.br,{}),"\n","[[compound_unique]]",(0,l.jsx)(e.br,{}),"\n",'columns = ["household_id", "person_id"]']}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsxs)(e.p,{children:["\u2705 Place rules under ",(0,l.jsx)(e.code,{children:"[file]"}),", ",(0,l.jsx)(e.code,{children:"[[columns]]"}),", or ",(0,l.jsx)(e.code,{children:"[[compound_unique]]"})," depending on scope.",(0,l.jsx)(e.br,{}),"\n","Rules can be combined within the same section."]}),"\n",(0,l.jsx)(e.hr,{})]})}function x(n={}){const{wrapper:e}={...(0,i.R)(),...n.components};return e?(0,l.jsx)(e,{...n,children:(0,l.jsx)(u,{...n})}):u(n)}}}]);